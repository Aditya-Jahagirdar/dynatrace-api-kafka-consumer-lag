
# Any Alexis application can use this authentication list definition
authentication_list:
  # Required keys: name, type, description, headers

  - unique_name: 'dynatrace_syn_day'
    type: 'dynatrace'
    description: 'Alexis 2.0 - Syn.Day'
    headers: '{"Authorization":"Api-Token sdfj3kvkdrj34kjdfkw35"}'

# Dynatrace tenant
url_tenant: 'https://zzz00000.live.dynatrace.com'

# kafka-consumer-groups.sh --list command as an array
# This will be executed as-is
kafka_consumer_groups_list:
  - "/opt/isv/tools/kafka/bin/kafka-consumer-groups.sh"
  - "--bootstrap-server"
  - "localhost:9092"
  - "--list"
  - "--command-config"
  - "/tmp/kafka-bin-client.prop"

# kafka-consumer-groups.sh --describe command as an array
# This will be appended with "--group" and each returned Consumer Group from the --list command
kafka_consumer_groups_describe:
  - "/opt/isv/tools/kafka/bin/kafka-consumer-groups.sh"
  - "--bootstrap-server"
  - "localhost:9092"
  - "--describe"
  - "--command-config"
  - "/tmp/kafka-bin-client.prop"
# - "--group"  --> This will be handled by the code
# - group_name --> This will be handled by the code

# Dynatrace Custom Device Unique Name (where we push the metrics)
custom_device: 'KafkaClusterTest01'

# Check for new Metrics (e.g. New Consumer Groups) every X loops
check_metrics_every_x_loops: 1000

# Enable this for simulating Kafka interaction for local development
development: False

# Enable this if you want to query Kafka but not interact with Dynatrace
kafka_only: True

# Enable this for enabling debug output
debug: True

# Set Threshold Defaults and Overrides
default_threshold: 'DEFAULT_CONSUMER_GROUP'

threshold_list:

  - consumer_group: 'DEFAULT_CONSUMER_GROUP'
    threshold: '10000'
    alertCondition: 'ABOVE'
    samples: '10'
    violatingSamples: '5'
    dealertingSamples: '5'
    eventType: 'PERFORMANCE_EVENT'
    #Optional: use $consumer_group as replacement text
    eventName: '$consumer_group Consumer Lag is High'
    #Optional: use $consumer_group as replacement text
    description: 'For $consumer_group, we discovered Consumer Lag of {severity} that is {alert_condition} the threshold of {threshold}'

  - consumer_group: 'MongoInserter'
    threshold: '12000'
    alertCondition: 'ABOVE'
    samples: '10'
    violatingSamples: '5'
    dealertingSamples: '5'
    eventType: 'PERFORMANCE_EVENT'
    #Optional: use $consumer_group as replacement text
    eventName: '$consumer_group Consumer Lag is High'
    #Optional: use $consumer_group as replacement text
    description: 'For $consumer_group, we discovered Consumer Lag of {severity} that is {alert_condition} the threshold of {threshold}'


